grammar org.xtext.trabalho.MAL with org.eclipse.xtext.common.Terminals

generate mAL "http://www.xtext.org/trabalho/MAL"

Program:
	(elements+=Statement ';')*
;

Statement:
	ModuleStmt (help=Helpinfo)? | Definition (help=Helpinfo)? | IncludeStmt | Stmt
;

ModuleStmt:
	'MODULE' ident=ID | 'ATOM' ident1=ID (':' ident2=ID)?
;

IncludeStmt:
	'INCLUDE' identifier=ID | 'INCLUDE' string_literal=STRING
;

Definition:
	('UNSAFE')? 'COMMAND' Header 'ADDRESS' identifier=ID |
	('UNSAFE')? 'PATTERN' Header 'ADDRESS' identifier=ID |
	('INLINE' | 'UNSAFE' )? 'FUNCTION' Header (stm1+=Statement)* 'END' name=Name | 
	'FACTORY' Header (stm2+=Statement)* 'END' name=Name
;

Helpinfo:
	'COMMENT' string_literal=STRING
;

Header:
	Name '(' param=Params ')' result=Result
;

Name:
	(mn+=ModuleName '.')* id=ID | id=ID // TODO: Descobrir o que é ModuleName
;


Result:
	TypeName | '(' Params ')'
;

Params: 
	Binding (',' bind+=Binding)*
;

Binding:
	identifier=ID tn=TypeName
;

TypeName:
	ScalarType | ColumnType | ':' at=AnyType // TODO: any e digit são ID???? 
;

ScalarType:
	':' identifier=ID
;

ColumnType:
	':' 'BAT' '[' ':' ColElmType ']'
;

ColElmType:
	ScalarType | at=AnyType // TODO: Descobrir o que é AnyType
;

AnyType:
	'any' ('_' digit=ID)?
;

Stmt:
	(Flow)? Varlist (':=' exp=Expr)
;

Flow:
	'RETURN'  | 'BARRIER' | 'CATCH' | 'LEAVE' | 'REDO' | 'RAISE'
;

Varlist:
	Variable | '(' Variable (',' var1+=Variable)* ')'
;

Variable:
	identifier=ID
;

Expr:
	Fcncall | (Factor operator=ID)? factor=Factor // TODO: operator é ID????
;

Factor:
	Literal_constant | 'NIL' | var=Variable // TODO: literal_constant e var são ID?????
;

Fcncall:
	ModuleName '.' name=Name '(' (args=Args)? ')' // TODO: Descobrir o que é ModuleName
;

Args:
	Factor (',' factor1+=Factor)*
;

ModuleName:
	identifier=ID
;

Literal_constant:
	BIT | Bte | CHR | WRD | INT | LNG | OID | FLT | DBL | STR //| Sht
;

terminal BIT:
	'0' | '1'
;
Bte:
	BIT BIT BIT BIT BIT BIT BIT BIT
;
terminal CHR:
	.
;
terminal WRD:
	('a'..'z'|'A'..'Z'|'_')('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
;
LNG:
	INT
;
terminal OID:
	('1'..'9') ('0'..'9')*
;
FLT:
	INT'.'INT
;
DBL:
	INT'.'INT
;
STR:
	STRING
;