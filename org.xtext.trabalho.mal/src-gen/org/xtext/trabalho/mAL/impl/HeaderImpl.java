/**
 * generated by Xtext 2.12.0
 */
package org.xtext.trabalho.mAL.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.trabalho.mAL.Header;
import org.xtext.trabalho.mAL.MALPackage;
import org.xtext.trabalho.mAL.Name;
import org.xtext.trabalho.mAL.Params;
import org.xtext.trabalho.mAL.Result;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Header</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.trabalho.mAL.impl.HeaderImpl#getHeader_name <em>Header name</em>}</li>
 *   <li>{@link org.xtext.trabalho.mAL.impl.HeaderImpl#getParams <em>Params</em>}</li>
 *   <li>{@link org.xtext.trabalho.mAL.impl.HeaderImpl#getReturn_type <em>Return type</em>}</li>
 * </ul>
 *
 * @generated
 */
public class HeaderImpl extends MinimalEObjectImpl.Container implements Header
{
  /**
   * The cached value of the '{@link #getHeader_name() <em>Header name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHeader_name()
   * @generated
   * @ordered
   */
  protected Name header_name;

  /**
   * The cached value of the '{@link #getParams() <em>Params</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParams()
   * @generated
   * @ordered
   */
  protected Params params;

  /**
   * The cached value of the '{@link #getReturn_type() <em>Return type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReturn_type()
   * @generated
   * @ordered
   */
  protected Result return_type;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected HeaderImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MALPackage.Literals.HEADER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Name getHeader_name()
  {
    return header_name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetHeader_name(Name newHeader_name, NotificationChain msgs)
  {
    Name oldHeader_name = header_name;
    header_name = newHeader_name;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MALPackage.HEADER__HEADER_NAME, oldHeader_name, newHeader_name);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHeader_name(Name newHeader_name)
  {
    if (newHeader_name != header_name)
    {
      NotificationChain msgs = null;
      if (header_name != null)
        msgs = ((InternalEObject)header_name).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MALPackage.HEADER__HEADER_NAME, null, msgs);
      if (newHeader_name != null)
        msgs = ((InternalEObject)newHeader_name).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MALPackage.HEADER__HEADER_NAME, null, msgs);
      msgs = basicSetHeader_name(newHeader_name, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MALPackage.HEADER__HEADER_NAME, newHeader_name, newHeader_name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Params getParams()
  {
    return params;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParams(Params newParams, NotificationChain msgs)
  {
    Params oldParams = params;
    params = newParams;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MALPackage.HEADER__PARAMS, oldParams, newParams);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setParams(Params newParams)
  {
    if (newParams != params)
    {
      NotificationChain msgs = null;
      if (params != null)
        msgs = ((InternalEObject)params).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MALPackage.HEADER__PARAMS, null, msgs);
      if (newParams != null)
        msgs = ((InternalEObject)newParams).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MALPackage.HEADER__PARAMS, null, msgs);
      msgs = basicSetParams(newParams, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MALPackage.HEADER__PARAMS, newParams, newParams));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Result getReturn_type()
  {
    return return_type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetReturn_type(Result newReturn_type, NotificationChain msgs)
  {
    Result oldReturn_type = return_type;
    return_type = newReturn_type;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, MALPackage.HEADER__RETURN_TYPE, oldReturn_type, newReturn_type);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReturn_type(Result newReturn_type)
  {
    if (newReturn_type != return_type)
    {
      NotificationChain msgs = null;
      if (return_type != null)
        msgs = ((InternalEObject)return_type).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - MALPackage.HEADER__RETURN_TYPE, null, msgs);
      if (newReturn_type != null)
        msgs = ((InternalEObject)newReturn_type).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - MALPackage.HEADER__RETURN_TYPE, null, msgs);
      msgs = basicSetReturn_type(newReturn_type, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MALPackage.HEADER__RETURN_TYPE, newReturn_type, newReturn_type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MALPackage.HEADER__HEADER_NAME:
        return basicSetHeader_name(null, msgs);
      case MALPackage.HEADER__PARAMS:
        return basicSetParams(null, msgs);
      case MALPackage.HEADER__RETURN_TYPE:
        return basicSetReturn_type(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MALPackage.HEADER__HEADER_NAME:
        return getHeader_name();
      case MALPackage.HEADER__PARAMS:
        return getParams();
      case MALPackage.HEADER__RETURN_TYPE:
        return getReturn_type();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MALPackage.HEADER__HEADER_NAME:
        setHeader_name((Name)newValue);
        return;
      case MALPackage.HEADER__PARAMS:
        setParams((Params)newValue);
        return;
      case MALPackage.HEADER__RETURN_TYPE:
        setReturn_type((Result)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MALPackage.HEADER__HEADER_NAME:
        setHeader_name((Name)null);
        return;
      case MALPackage.HEADER__PARAMS:
        setParams((Params)null);
        return;
      case MALPackage.HEADER__RETURN_TYPE:
        setReturn_type((Result)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MALPackage.HEADER__HEADER_NAME:
        return header_name != null;
      case MALPackage.HEADER__PARAMS:
        return params != null;
      case MALPackage.HEADER__RETURN_TYPE:
        return return_type != null;
    }
    return super.eIsSet(featureID);
  }

} //HeaderImpl
