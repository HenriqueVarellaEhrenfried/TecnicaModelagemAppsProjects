/*
 * generated by Xtext 2.12.0
 */
grammar InternalMAL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.trabalho.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.trabalho.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.trabalho.services.MALGrammarAccess;

}
@parser::members {
	private MALGrammarAccess grammarAccess;

	public void setGrammarAccess(MALGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)*
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModuleStmt
entryRuleModuleStmt
:
{ before(grammarAccess.getModuleStmtRule()); }
	 ruleModuleStmt
{ after(grammarAccess.getModuleStmtRule()); } 
	 EOF 
;

// Rule ModuleStmt
ruleModuleStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleStmtAccess().getAlternatives()); }
		(rule__ModuleStmt__Alternatives)
		{ after(grammarAccess.getModuleStmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIncludeStmt
entryRuleIncludeStmt
:
{ before(grammarAccess.getIncludeStmtRule()); }
	 ruleIncludeStmt
{ after(grammarAccess.getIncludeStmtRule()); } 
	 EOF 
;

// Rule IncludeStmt
ruleIncludeStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIncludeStmtAccess().getAlternatives()); }
		(rule__IncludeStmt__Alternatives)
		{ after(grammarAccess.getIncludeStmtAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinition
entryRuleDefinition
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionAccess().getAlternatives()); }
		(rule__Definition__Alternatives)
		{ after(grammarAccess.getDefinitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHelpinfo
entryRuleHelpinfo
:
{ before(grammarAccess.getHelpinfoRule()); }
	 ruleHelpinfo
{ after(grammarAccess.getHelpinfoRule()); } 
	 EOF 
;

// Rule Helpinfo
ruleHelpinfo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHelpinfoAccess().getGroup()); }
		(rule__Helpinfo__Group__0)
		{ after(grammarAccess.getHelpinfoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleHeader
entryRuleHeader
:
{ before(grammarAccess.getHeaderRule()); }
	 ruleHeader
{ after(grammarAccess.getHeaderRule()); } 
	 EOF 
;

// Rule Header
ruleHeader 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getHeaderAccess().getGroup()); }
		(rule__Header__Group__0)
		{ after(grammarAccess.getHeaderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleName
entryRuleName
:
{ before(grammarAccess.getNameRule()); }
	 ruleName
{ after(grammarAccess.getNameRule()); } 
	 EOF 
;

// Rule Name
ruleName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNameAccess().getGroup()); }
		(rule__Name__Group__0)
		{ after(grammarAccess.getNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResult
entryRuleResult
:
{ before(grammarAccess.getResultRule()); }
	 ruleResult
{ after(grammarAccess.getResultRule()); } 
	 EOF 
;

// Rule Result
ruleResult 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResultAccess().getAlternatives()); }
		(rule__Result__Alternatives)
		{ after(grammarAccess.getResultAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParams
entryRuleParams
:
{ before(grammarAccess.getParamsRule()); }
	 ruleParams
{ after(grammarAccess.getParamsRule()); } 
	 EOF 
;

// Rule Params
ruleParams 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParamsAccess().getGroup()); }
		(rule__Params__Group__0)
		{ after(grammarAccess.getParamsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinding
entryRuleBinding
:
{ before(grammarAccess.getBindingRule()); }
	 ruleBinding
{ after(grammarAccess.getBindingRule()); } 
	 EOF 
;

// Rule Binding
ruleBinding 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBindingAccess().getGroup()); }
		(rule__Binding__Group__0)
		{ after(grammarAccess.getBindingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeName
entryRuleTypeName
:
{ before(grammarAccess.getTypeNameRule()); }
	 ruleTypeName
{ after(grammarAccess.getTypeNameRule()); } 
	 EOF 
;

// Rule TypeName
ruleTypeName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeNameAccess().getAlternatives()); }
		(rule__TypeName__Alternatives)
		{ after(grammarAccess.getTypeNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScalarType
entryRuleScalarType
:
{ before(grammarAccess.getScalarTypeRule()); }
	 ruleScalarType
{ after(grammarAccess.getScalarTypeRule()); } 
	 EOF 
;

// Rule ScalarType
ruleScalarType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScalarTypeAccess().getGroup()); }
		(rule__ScalarType__Group__0)
		{ after(grammarAccess.getScalarTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumnType
entryRuleColumnType
:
{ before(grammarAccess.getColumnTypeRule()); }
	 ruleColumnType
{ after(grammarAccess.getColumnTypeRule()); } 
	 EOF 
;

// Rule ColumnType
ruleColumnType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnTypeAccess().getGroup()); }
		(rule__ColumnType__Group__0)
		{ after(grammarAccess.getColumnTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColElmType
entryRuleColElmType
:
{ before(grammarAccess.getColElmTypeRule()); }
	 ruleColElmType
{ after(grammarAccess.getColElmTypeRule()); } 
	 EOF 
;

// Rule ColElmType
ruleColElmType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColElmTypeAccess().getAlternatives()); }
		(rule__ColElmType__Alternatives)
		{ after(grammarAccess.getColElmTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAnyType
entryRuleAnyType
:
{ before(grammarAccess.getAnyTypeRule()); }
	 ruleAnyType
{ after(grammarAccess.getAnyTypeRule()); } 
	 EOF 
;

// Rule AnyType
ruleAnyType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnyTypeAccess().getGroup()); }
		(rule__AnyType__Group__0)
		{ after(grammarAccess.getAnyTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStmt
entryRuleStmt
:
{ before(grammarAccess.getStmtRule()); }
	 ruleStmt
{ after(grammarAccess.getStmtRule()); } 
	 EOF 
;

// Rule Stmt
ruleStmt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStmtAccess().getGroup()); }
		(rule__Stmt__Group__0)
		{ after(grammarAccess.getStmtAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFlow
entryRuleFlow
:
{ before(grammarAccess.getFlowRule()); }
	 ruleFlow
{ after(grammarAccess.getFlowRule()); } 
	 EOF 
;

// Rule Flow
ruleFlow 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFlowAccess().getAlternatives()); }
		(rule__Flow__Alternatives)
		{ after(grammarAccess.getFlowAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarlist
entryRuleVarlist
:
{ before(grammarAccess.getVarlistRule()); }
	 ruleVarlist
{ after(grammarAccess.getVarlistRule()); } 
	 EOF 
;

// Rule Varlist
ruleVarlist 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarlistAccess().getAlternatives()); }
		(rule__Varlist__Alternatives)
		{ after(grammarAccess.getVarlistAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getIdentifierAssignment()); }
		(rule__Variable__IdentifierAssignment)
		{ after(grammarAccess.getVariableAccess().getIdentifierAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpr
entryRuleExpr
:
{ before(grammarAccess.getExprRule()); }
	 ruleExpr
{ after(grammarAccess.getExprRule()); } 
	 EOF 
;

// Rule Expr
ruleExpr 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExprAccess().getAlternatives()); }
		(rule__Expr__Alternatives)
		{ after(grammarAccess.getExprAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperator
entryRuleOperator
:
{ before(grammarAccess.getOperatorRule()); }
	 ruleOperator
{ after(grammarAccess.getOperatorRule()); } 
	 EOF 
;

// Rule Operator
ruleOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
		(rule__Operator__Alternatives)
		{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFactor
entryRuleFactor
:
{ before(grammarAccess.getFactorRule()); }
	 ruleFactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule Factor
ruleFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactorAccess().getAlternatives()); }
		(rule__Factor__Alternatives)
		{ after(grammarAccess.getFactorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFcncall
entryRuleFcncall
:
{ before(grammarAccess.getFcncallRule()); }
	 ruleFcncall
{ after(grammarAccess.getFcncallRule()); } 
	 EOF 
;

// Rule Fcncall
ruleFcncall 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFcncallAccess().getGroup()); }
		(rule__Fcncall__Group__0)
		{ after(grammarAccess.getFcncallAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgs
entryRuleArgs
:
{ before(grammarAccess.getArgsRule()); }
	 ruleArgs
{ after(grammarAccess.getArgsRule()); } 
	 EOF 
;

// Rule Args
ruleArgs 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgsAccess().getGroup()); }
		(rule__Args__Group__0)
		{ after(grammarAccess.getArgsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModuleName
entryRuleModuleName
:
{ before(grammarAccess.getModuleNameRule()); }
	 ruleModuleName
{ after(grammarAccess.getModuleNameRule()); } 
	 EOF 
;

// Rule ModuleName
ruleModuleName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleNameAccess().getIdentifierAssignment()); }
		(rule__ModuleName__IdentifierAssignment)
		{ after(grammarAccess.getModuleNameAccess().getIdentifierAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral_constant
entryRuleLiteral_constant
:
{ before(grammarAccess.getLiteral_constantRule()); }
	 ruleLiteral_constant
{ after(grammarAccess.getLiteral_constantRule()); } 
	 EOF 
;

// Rule Literal_constant
ruleLiteral_constant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteral_constantAccess().getAlternatives()); }
		(rule__Literal_constant__Alternatives)
		{ after(grammarAccess.getLiteral_constantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBte
entryRuleBte
:
{ before(grammarAccess.getBteRule()); }
	 ruleBte
{ after(grammarAccess.getBteRule()); } 
	 EOF 
;

// Rule Bte
ruleBte 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBteAccess().getGroup()); }
		(rule__Bte__Group__0)
		{ after(grammarAccess.getBteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFLT
entryRuleFLT
:
{ before(grammarAccess.getFLTRule()); }
	 ruleFLT
{ after(grammarAccess.getFLTRule()); } 
	 EOF 
;

// Rule FLT
ruleFLT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFLTAccess().getGroup()); }
		(rule__FLT__Group__0)
		{ after(grammarAccess.getFLTAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSTR
entryRuleSTR
:
{ before(grammarAccess.getSTRRule()); }
	 ruleSTR
{ after(grammarAccess.getSTRRule()); } 
	 EOF 
;

// Rule STR
ruleSTR 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSTRAccess().getSTRINGTerminalRuleCall()); }
		RULE_STRING
		{ after(grammarAccess.getSTRAccess().getSTRINGTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getGroup_0()); }
		(rule__Statement__Group_0__0)
		{ after(grammarAccess.getStatementAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGroup_1()); }
		(rule__Statement__Group_1__0)
		{ after(grammarAccess.getStatementAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIncludeStmtParserRuleCall_2()); }
		ruleIncludeStmt
		{ after(grammarAccess.getStatementAccess().getIncludeStmtParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getStmtParserRuleCall_3()); }
		ruleStmt
		{ after(grammarAccess.getStatementAccess().getStmtParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleStmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleStmtAccess().getGroup_0()); }
		(rule__ModuleStmt__Group_0__0)
		{ after(grammarAccess.getModuleStmtAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getModuleStmtAccess().getGroup_1()); }
		(rule__ModuleStmt__Group_1__0)
		{ after(grammarAccess.getModuleStmtAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleStmt__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleStmtAccess().getMODULEKeyword_0_0_0()); }
		'MODULE'
		{ after(grammarAccess.getModuleStmtAccess().getMODULEKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModuleStmtAccess().getModuleKeyword_0_0_1()); }
		'module'
		{ after(grammarAccess.getModuleStmtAccess().getModuleKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleStmt__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleStmtAccess().getATOMKeyword_1_0_0()); }
		'ATOM'
		{ after(grammarAccess.getModuleStmtAccess().getATOMKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModuleStmtAccess().getAtomKeyword_1_0_1()); }
		'atom'
		{ after(grammarAccess.getModuleStmtAccess().getAtomKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStmt__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncludeStmtAccess().getGroup_0()); }
		(rule__IncludeStmt__Group_0__0)
		{ after(grammarAccess.getIncludeStmtAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getIncludeStmtAccess().getGroup_1()); }
		(rule__IncludeStmt__Group_1__0)
		{ after(grammarAccess.getIncludeStmtAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStmt__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncludeStmtAccess().getINCLUDEKeyword_0_0_0()); }
		'INCLUDE'
		{ after(grammarAccess.getIncludeStmtAccess().getINCLUDEKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getIncludeStmtAccess().getIncludeKeyword_0_0_1()); }
		'include'
		{ after(grammarAccess.getIncludeStmtAccess().getIncludeKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStmt__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncludeStmtAccess().getINCLUDEKeyword_1_0_0()); }
		'INCLUDE'
		{ after(grammarAccess.getIncludeStmtAccess().getINCLUDEKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getIncludeStmtAccess().getIncludeKeyword_1_0_1()); }
		'include'
		{ after(grammarAccess.getIncludeStmtAccess().getIncludeKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getGroup_0()); }
		(rule__Definition__Group_0__0)
		{ after(grammarAccess.getDefinitionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getGroup_1()); }
		(rule__Definition__Group_1__0)
		{ after(grammarAccess.getDefinitionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getGroup_2()); }
		(rule__Definition__Group_2__0)
		{ after(grammarAccess.getDefinitionAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getGroup_3()); }
		(rule__Definition__Group_3__0)
		{ after(grammarAccess.getDefinitionAccess().getGroup_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getUNSAFEKeyword_0_0_0()); }
		'UNSAFE'
		{ after(grammarAccess.getDefinitionAccess().getUNSAFEKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getUnsafeKeyword_0_0_1()); }
		'unsafe'
		{ after(grammarAccess.getDefinitionAccess().getUnsafeKeyword_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getCOMMANDKeyword_0_1_0()); }
		'COMMAND'
		{ after(grammarAccess.getDefinitionAccess().getCOMMANDKeyword_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getCommandKeyword_0_1_1()); }
		'command'
		{ after(grammarAccess.getDefinitionAccess().getCommandKeyword_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getADDRESSKeyword_0_3_0()); }
		'ADDRESS'
		{ after(grammarAccess.getDefinitionAccess().getADDRESSKeyword_0_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getAddressKeyword_0_3_1()); }
		'address'
		{ after(grammarAccess.getDefinitionAccess().getAddressKeyword_0_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getUNSAFEKeyword_1_0_0()); }
		'UNSAFE'
		{ after(grammarAccess.getDefinitionAccess().getUNSAFEKeyword_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getUnsafeKeyword_1_0_1()); }
		'unsafe'
		{ after(grammarAccess.getDefinitionAccess().getUnsafeKeyword_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getPATTERNKeyword_1_1_0()); }
		'PATTERN'
		{ after(grammarAccess.getDefinitionAccess().getPATTERNKeyword_1_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getPatternKeyword_1_1_1()); }
		'pattern'
		{ after(grammarAccess.getDefinitionAccess().getPatternKeyword_1_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getADDRESSKeyword_1_3_0()); }
		'ADDRESS'
		{ after(grammarAccess.getDefinitionAccess().getADDRESSKeyword_1_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getAddressKeyword_1_3_1()); }
		'address'
		{ after(grammarAccess.getDefinitionAccess().getAddressKeyword_1_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getAlternatives_2_0_0()); }
		(rule__Definition__Alternatives_2_0_0)
		{ after(grammarAccess.getDefinitionAccess().getAlternatives_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getAlternatives_2_0_1()); }
		(rule__Definition__Alternatives_2_0_1)
		{ after(grammarAccess.getDefinitionAccess().getAlternatives_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getINLINEKeyword_2_0_0_0()); }
		'INLINE'
		{ after(grammarAccess.getDefinitionAccess().getINLINEKeyword_2_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getInlineKeyword_2_0_0_1()); }
		'inline'
		{ after(grammarAccess.getDefinitionAccess().getInlineKeyword_2_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getUNSAFEKeyword_2_0_1_0()); }
		'UNSAFE'
		{ after(grammarAccess.getDefinitionAccess().getUNSAFEKeyword_2_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getUnsafeKeyword_2_0_1_1()); }
		'unsafe'
		{ after(grammarAccess.getDefinitionAccess().getUnsafeKeyword_2_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getFUNCTIONKeyword_2_1_0()); }
		'FUNCTION'
		{ after(grammarAccess.getDefinitionAccess().getFUNCTIONKeyword_2_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getFunctionKeyword_2_1_1()); }
		'function'
		{ after(grammarAccess.getDefinitionAccess().getFunctionKeyword_2_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getENDKeyword_2_4_0()); }
		'END'
		{ after(grammarAccess.getDefinitionAccess().getENDKeyword_2_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getEndKeyword_2_4_1()); }
		'end'
		{ after(grammarAccess.getDefinitionAccess().getEndKeyword_2_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getFACTORYKeyword_3_0_0()); }
		'FACTORY'
		{ after(grammarAccess.getDefinitionAccess().getFACTORYKeyword_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getFactoryKeyword_3_0_1()); }
		'factory'
		{ after(grammarAccess.getDefinitionAccess().getFactoryKeyword_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives_3_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getENDKeyword_3_3_0()); }
		'END'
		{ after(grammarAccess.getDefinitionAccess().getENDKeyword_3_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getEndKeyword_3_3_1()); }
		'end'
		{ after(grammarAccess.getDefinitionAccess().getEndKeyword_3_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Helpinfo__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHelpinfoAccess().getCOMMENTKeyword_0_0()); }
		'COMMENT'
		{ after(grammarAccess.getHelpinfoAccess().getCOMMENTKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getHelpinfoAccess().getCommentKeyword_0_1()); }
		'comment'
		{ after(grammarAccess.getHelpinfoAccess().getCommentKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResultAccess().getTypeNameParserRuleCall_0()); }
		ruleTypeName
		{ after(grammarAccess.getResultAccess().getTypeNameParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getResultAccess().getGroup_1()); }
		(rule__Result__Group_1__0)
		{ after(grammarAccess.getResultAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeNameAccess().getScalarTypeParserRuleCall_0()); }
		ruleScalarType
		{ after(grammarAccess.getTypeNameAccess().getScalarTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeNameAccess().getColumnTypeParserRuleCall_1()); }
		ruleColumnType
		{ after(grammarAccess.getTypeNameAccess().getColumnTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeNameAccess().getAnyTypeParserRuleCall_2()); }
		ruleAnyType
		{ after(grammarAccess.getTypeNameAccess().getAnyTypeParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnType__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnTypeAccess().getBATKeyword_1_0()); }
		'BAT'
		{ after(grammarAccess.getColumnTypeAccess().getBATKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getColumnTypeAccess().getBatKeyword_1_1()); }
		'bat'
		{ after(grammarAccess.getColumnTypeAccess().getBatKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColElmType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColElmTypeAccess().getScalarTypeParserRuleCall_0()); }
		ruleScalarType
		{ after(grammarAccess.getColElmTypeAccess().getScalarTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getColElmTypeAccess().getAnyTypeParserRuleCall_1()); }
		ruleAnyType
		{ after(grammarAccess.getColElmTypeAccess().getAnyTypeParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlowAccess().getAlternatives_0()); }
		(rule__Flow__Alternatives_0)
		{ after(grammarAccess.getFlowAccess().getAlternatives_0()); }
	)
	|
	(
		{ before(grammarAccess.getFlowAccess().getAlternatives_1()); }
		(rule__Flow__Alternatives_1)
		{ after(grammarAccess.getFlowAccess().getAlternatives_1()); }
	)
	|
	(
		{ before(grammarAccess.getFlowAccess().getAlternatives_2()); }
		(rule__Flow__Alternatives_2)
		{ after(grammarAccess.getFlowAccess().getAlternatives_2()); }
	)
	|
	(
		{ before(grammarAccess.getFlowAccess().getAlternatives_3()); }
		(rule__Flow__Alternatives_3)
		{ after(grammarAccess.getFlowAccess().getAlternatives_3()); }
	)
	|
	(
		{ before(grammarAccess.getFlowAccess().getAlternatives_4()); }
		(rule__Flow__Alternatives_4)
		{ after(grammarAccess.getFlowAccess().getAlternatives_4()); }
	)
	|
	(
		{ before(grammarAccess.getFlowAccess().getAlternatives_5()); }
		(rule__Flow__Alternatives_5)
		{ after(grammarAccess.getFlowAccess().getAlternatives_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlowAccess().getRETURNKeyword_0_0()); }
		'RETURN'
		{ after(grammarAccess.getFlowAccess().getRETURNKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFlowAccess().getReturnKeyword_0_1()); }
		'return'
		{ after(grammarAccess.getFlowAccess().getReturnKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlowAccess().getBARRIERKeyword_1_0()); }
		'BARRIER'
		{ after(grammarAccess.getFlowAccess().getBARRIERKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFlowAccess().getBarrierKeyword_1_1()); }
		'barrier'
		{ after(grammarAccess.getFlowAccess().getBarrierKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlowAccess().getCATCHKeyword_2_0()); }
		'CATCH'
		{ after(grammarAccess.getFlowAccess().getCATCHKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getFlowAccess().getCatchKeyword_2_1()); }
		'catch'
		{ after(grammarAccess.getFlowAccess().getCatchKeyword_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlowAccess().getLEAVEKeyword_3_0()); }
		'LEAVE'
		{ after(grammarAccess.getFlowAccess().getLEAVEKeyword_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getFlowAccess().getLeaveKeyword_3_1()); }
		'leave'
		{ after(grammarAccess.getFlowAccess().getLeaveKeyword_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlowAccess().getREDOKeyword_4_0()); }
		'REDO'
		{ after(grammarAccess.getFlowAccess().getREDOKeyword_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getFlowAccess().getRedoKeyword_4_1()); }
		'redo'
		{ after(grammarAccess.getFlowAccess().getRedoKeyword_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__Alternatives_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFlowAccess().getRAISEKeyword_5_0()); }
		'RAISE'
		{ after(grammarAccess.getFlowAccess().getRAISEKeyword_5_0()); }
	)
	|
	(
		{ before(grammarAccess.getFlowAccess().getRaiseKeyword_5_1()); }
		'raise'
		{ after(grammarAccess.getFlowAccess().getRaiseKeyword_5_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varlist__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarlistAccess().getVariablesAssignment_0()); }
		(rule__Varlist__VariablesAssignment_0)
		{ after(grammarAccess.getVarlistAccess().getVariablesAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getVarlistAccess().getGroup_1()); }
		(rule__Varlist__Group_1__0)
		{ after(grammarAccess.getVarlistAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getFcncallParserRuleCall_0()); }
		ruleFcncall
		{ after(grammarAccess.getExprAccess().getFcncallParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExprAccess().getGroup_1()); }
		(rule__Expr__Group_1__0)
		{ after(grammarAccess.getExprAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getPlusSignKeyword_0()); }
		'+'
		{ after(grammarAccess.getOperatorAccess().getPlusSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getHyphenMinusKeyword_1()); }
		'-'
		{ after(grammarAccess.getOperatorAccess().getHyphenMinusKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getAsteriskKeyword_2()); }
		'*'
		{ after(grammarAccess.getOperatorAccess().getAsteriskKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getSolidusKeyword_3()); }
		'/'
		{ after(grammarAccess.getOperatorAccess().getSolidusKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getGroup_0()); }
		(rule__Factor__Group_0__0)
		{ after(grammarAccess.getFactorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getGroup_1()); }
		(rule__Factor__Group_1__0)
		{ after(grammarAccess.getFactorAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal_constant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteral_constantAccess().getBITTerminalRuleCall_0()); }
		RULE_BIT
		{ after(grammarAccess.getLiteral_constantAccess().getBITTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteral_constantAccess().getBteParserRuleCall_1()); }
		ruleBte
		{ after(grammarAccess.getLiteral_constantAccess().getBteParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteral_constantAccess().getCHRTerminalRuleCall_2()); }
		RULE_CHR
		{ after(grammarAccess.getLiteral_constantAccess().getCHRTerminalRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteral_constantAccess().getWRDTerminalRuleCall_3()); }
		RULE_WRD
		{ after(grammarAccess.getLiteral_constantAccess().getWRDTerminalRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getLiteral_constantAccess().getINTTerminalRuleCall_4()); }
		RULE_INT
		{ after(grammarAccess.getLiteral_constantAccess().getINTTerminalRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getLiteral_constantAccess().getOIDTerminalRuleCall_5()); }
		RULE_OID
		{ after(grammarAccess.getLiteral_constantAccess().getOIDTerminalRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getLiteral_constantAccess().getFLTParserRuleCall_6()); }
		ruleFLT
		{ after(grammarAccess.getLiteral_constantAccess().getFLTParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getLiteral_constantAccess().getSTRParserRuleCall_7()); }
		ruleSTR
		{ after(grammarAccess.getLiteral_constantAccess().getSTRParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getElementsAssignment_0()); }
	(rule__Program__ElementsAssignment_0)
	{ after(grammarAccess.getProgramAccess().getElementsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getProgramAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0__0__Impl
	rule__Statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getModuleStmtParserRuleCall_0_0()); }
	ruleModuleStmt
	{ after(grammarAccess.getStatementAccess().getModuleStmtParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getHelpAssignment_0_1()); }
	(rule__Statement__HelpAssignment_0_1)?
	{ after(grammarAccess.getStatementAccess().getHelpAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1__0__Impl
	rule__Statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getDefinitionParserRuleCall_1_0()); }
	ruleDefinition
	{ after(grammarAccess.getStatementAccess().getDefinitionParserRuleCall_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getHelpAssignment_1_1()); }
	(rule__Statement__HelpAssignment_1_1)?
	{ after(grammarAccess.getStatementAccess().getHelpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleStmt__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleStmt__Group_0__0__Impl
	rule__ModuleStmt__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleStmt__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleStmtAccess().getAlternatives_0_0()); }
	(rule__ModuleStmt__Alternatives_0_0)
	{ after(grammarAccess.getModuleStmtAccess().getAlternatives_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleStmt__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleStmt__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleStmt__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleStmtAccess().getIdentAssignment_0_1()); }
	(rule__ModuleStmt__IdentAssignment_0_1)
	{ after(grammarAccess.getModuleStmtAccess().getIdentAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleStmt__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleStmt__Group_1__0__Impl
	rule__ModuleStmt__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleStmt__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleStmtAccess().getAlternatives_1_0()); }
	(rule__ModuleStmt__Alternatives_1_0)
	{ after(grammarAccess.getModuleStmtAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleStmt__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleStmt__Group_1__1__Impl
	rule__ModuleStmt__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleStmt__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleStmtAccess().getIdentAssignment_1_1()); }
	(rule__ModuleStmt__IdentAssignment_1_1)
	{ after(grammarAccess.getModuleStmtAccess().getIdentAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleStmt__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleStmt__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleStmt__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleStmtAccess().getGroup_1_2()); }
	(rule__ModuleStmt__Group_1_2__0)?
	{ after(grammarAccess.getModuleStmtAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleStmt__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleStmt__Group_1_2__0__Impl
	rule__ModuleStmt__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleStmt__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleStmtAccess().getColonKeyword_1_2_0()); }
	':'
	{ after(grammarAccess.getModuleStmtAccess().getColonKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleStmt__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleStmt__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleStmt__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleStmtAccess().getSecond_identAssignment_1_2_1()); }
	(rule__ModuleStmt__Second_identAssignment_1_2_1)
	{ after(grammarAccess.getModuleStmtAccess().getSecond_identAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeStmt__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IncludeStmt__Group_0__0__Impl
	rule__IncludeStmt__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStmt__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeStmtAccess().getAlternatives_0_0()); }
	(rule__IncludeStmt__Alternatives_0_0)
	{ after(grammarAccess.getIncludeStmtAccess().getAlternatives_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStmt__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IncludeStmt__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStmt__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeStmtAccess().getIdentifierAssignment_0_1()); }
	(rule__IncludeStmt__IdentifierAssignment_0_1)
	{ after(grammarAccess.getIncludeStmtAccess().getIdentifierAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IncludeStmt__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IncludeStmt__Group_1__0__Impl
	rule__IncludeStmt__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStmt__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeStmtAccess().getAlternatives_1_0()); }
	(rule__IncludeStmt__Alternatives_1_0)
	{ after(grammarAccess.getIncludeStmtAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStmt__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IncludeStmt__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStmt__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIncludeStmtAccess().getString_literalAssignment_1_1()); }
	(rule__IncludeStmt__String_literalAssignment_1_1)
	{ after(grammarAccess.getIncludeStmtAccess().getString_literalAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_0__0__Impl
	rule__Definition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getAlternatives_0_0()); }
	(rule__Definition__Alternatives_0_0)?
	{ after(grammarAccess.getDefinitionAccess().getAlternatives_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_0__1__Impl
	rule__Definition__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getAlternatives_0_1()); }
	(rule__Definition__Alternatives_0_1)
	{ after(grammarAccess.getDefinitionAccess().getAlternatives_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_0__2__Impl
	rule__Definition__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getHeaderAssignment_0_2()); }
	(rule__Definition__HeaderAssignment_0_2)
	{ after(grammarAccess.getDefinitionAccess().getHeaderAssignment_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_0__3__Impl
	rule__Definition__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getAlternatives_0_3()); }
	(rule__Definition__Alternatives_0_3)
	{ after(grammarAccess.getDefinitionAccess().getAlternatives_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getIdentifierAssignment_0_4()); }
	(rule__Definition__IdentifierAssignment_0_4)
	{ after(grammarAccess.getDefinitionAccess().getIdentifierAssignment_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_1__0__Impl
	rule__Definition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getAlternatives_1_0()); }
	(rule__Definition__Alternatives_1_0)?
	{ after(grammarAccess.getDefinitionAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_1__1__Impl
	rule__Definition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getAlternatives_1_1()); }
	(rule__Definition__Alternatives_1_1)
	{ after(grammarAccess.getDefinitionAccess().getAlternatives_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_1__2__Impl
	rule__Definition__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getHeaderAssignment_1_2()); }
	(rule__Definition__HeaderAssignment_1_2)
	{ after(grammarAccess.getDefinitionAccess().getHeaderAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_1__3__Impl
	rule__Definition__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getAlternatives_1_3()); }
	(rule__Definition__Alternatives_1_3)
	{ after(grammarAccess.getDefinitionAccess().getAlternatives_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getIdentifierAssignment_1_4()); }
	(rule__Definition__IdentifierAssignment_1_4)
	{ after(grammarAccess.getDefinitionAccess().getIdentifierAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_2__0__Impl
	rule__Definition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getAlternatives_2_0()); }
	(rule__Definition__Alternatives_2_0)?
	{ after(grammarAccess.getDefinitionAccess().getAlternatives_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_2__1__Impl
	rule__Definition__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getAlternatives_2_1()); }
	(rule__Definition__Alternatives_2_1)
	{ after(grammarAccess.getDefinitionAccess().getAlternatives_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_2__2__Impl
	rule__Definition__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getHeaderAssignment_2_2()); }
	(rule__Definition__HeaderAssignment_2_2)
	{ after(grammarAccess.getDefinitionAccess().getHeaderAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_2__3__Impl
	rule__Definition__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getStatementsAssignment_2_3()); }
	(rule__Definition__StatementsAssignment_2_3)*
	{ after(grammarAccess.getDefinitionAccess().getStatementsAssignment_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_2__4__Impl
	rule__Definition__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getAlternatives_2_4()); }
	(rule__Definition__Alternatives_2_4)
	{ after(grammarAccess.getDefinitionAccess().getAlternatives_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_2__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getFunction_nameAssignment_2_5()); }
	(rule__Definition__Function_nameAssignment_2_5)
	{ after(grammarAccess.getDefinitionAccess().getFunction_nameAssignment_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Definition__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_3__0__Impl
	rule__Definition__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getAlternatives_3_0()); }
	(rule__Definition__Alternatives_3_0)
	{ after(grammarAccess.getDefinitionAccess().getAlternatives_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_3__1__Impl
	rule__Definition__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getHeaderAssignment_3_1()); }
	(rule__Definition__HeaderAssignment_3_1)
	{ after(grammarAccess.getDefinitionAccess().getHeaderAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_3__2__Impl
	rule__Definition__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getStatementsAssignment_3_2()); }
	(rule__Definition__StatementsAssignment_3_2)*
	{ after(grammarAccess.getDefinitionAccess().getStatementsAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_3__3__Impl
	rule__Definition__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getAlternatives_3_3()); }
	(rule__Definition__Alternatives_3_3)
	{ after(grammarAccess.getDefinitionAccess().getAlternatives_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Definition__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDefinitionAccess().getFactory_nameAssignment_3_4()); }
	(rule__Definition__Factory_nameAssignment_3_4)
	{ after(grammarAccess.getDefinitionAccess().getFactory_nameAssignment_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Helpinfo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Helpinfo__Group__0__Impl
	rule__Helpinfo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Helpinfo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelpinfoAccess().getAlternatives_0()); }
	(rule__Helpinfo__Alternatives_0)
	{ after(grammarAccess.getHelpinfoAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Helpinfo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Helpinfo__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Helpinfo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHelpinfoAccess().getString_literalAssignment_1()); }
	(rule__Helpinfo__String_literalAssignment_1)
	{ after(grammarAccess.getHelpinfoAccess().getString_literalAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Header__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group__0__Impl
	rule__Header__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getHeader_nameAssignment_0()); }
	(rule__Header__Header_nameAssignment_0)
	{ after(grammarAccess.getHeaderAccess().getHeader_nameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group__1__Impl
	rule__Header__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getHeaderAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group__2__Impl
	rule__Header__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getParamsAssignment_2()); }
	(rule__Header__ParamsAssignment_2)
	{ after(grammarAccess.getHeaderAccess().getParamsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group__3__Impl
	rule__Header__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getHeaderAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Header__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getHeaderAccess().getReturn_typeAssignment_4()); }
	(rule__Header__Return_typeAssignment_4)
	{ after(grammarAccess.getHeaderAccess().getReturn_typeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group__0__Impl
	rule__Name__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getGroup_0()); }
	(rule__Name__Group_0__0)?
	{ after(grammarAccess.getNameAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getIdAssignment_1()); }
	(rule__Name__IdAssignment_1)
	{ after(grammarAccess.getNameAccess().getIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Name__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_0__0__Impl
	rule__Name__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getModuleNameParserRuleCall_0_0()); }
	ruleModuleName
	{ after(grammarAccess.getNameAccess().getModuleNameParserRuleCall_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Name__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNameAccess().getFullStopKeyword_0_1()); }
	'.'
	{ after(grammarAccess.getNameAccess().getFullStopKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Result__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Result__Group_1__0__Impl
	rule__Result__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getResultAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Result__Group_1__1__Impl
	rule__Result__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultAccess().getParamsParserRuleCall_1_1()); }
	ruleParams
	{ after(grammarAccess.getResultAccess().getParamsParserRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Result__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Result__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResultAccess().getRightParenthesisKeyword_1_2()); }
	')'
	{ after(grammarAccess.getResultAccess().getRightParenthesisKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Params__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Params__Group__0__Impl
	rule__Params__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamsAccess().getBindAssignment_0()); }
	(rule__Params__BindAssignment_0)
	{ after(grammarAccess.getParamsAccess().getBindAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Params__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamsAccess().getGroup_1()); }
	(rule__Params__Group_1__0)*
	{ after(grammarAccess.getParamsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Params__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Params__Group_1__0__Impl
	rule__Params__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getParamsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Params__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParamsAccess().getBindAssignment_1_1()); }
	(rule__Params__BindAssignment_1_1)
	{ after(grammarAccess.getParamsAccess().getBindAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Binding__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group__0__Impl
	rule__Binding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getIdentifierAssignment_0()); }
	(rule__Binding__IdentifierAssignment_0)
	{ after(grammarAccess.getBindingAccess().getIdentifierAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Binding__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBindingAccess().getTypeAssignment_1()); }
	(rule__Binding__TypeAssignment_1)
	{ after(grammarAccess.getBindingAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ScalarType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScalarType__Group__0__Impl
	rule__ScalarType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarTypeAccess().getColonKeyword_0()); }
	':'
	{ after(grammarAccess.getScalarTypeAccess().getColonKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ScalarType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScalarTypeAccess().getIdentifierAssignment_1()); }
	(rule__ScalarType__IdentifierAssignment_1)
	{ after(grammarAccess.getScalarTypeAccess().getIdentifierAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnType__Group__0__Impl
	rule__ColumnType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnTypeAccess().getColonKeyword_0()); }
	':'
	{ after(grammarAccess.getColumnTypeAccess().getColonKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnType__Group__1__Impl
	rule__ColumnType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnTypeAccess().getAlternatives_1()); }
	(rule__ColumnType__Alternatives_1)
	{ after(grammarAccess.getColumnTypeAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnType__Group__2__Impl
	rule__ColumnType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnTypeAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getColumnTypeAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnType__Group__3__Impl
	rule__ColumnType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnTypeAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getColumnTypeAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnType__Group__4__Impl
	rule__ColumnType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnTypeAccess().getColElmTypeParserRuleCall_4()); }
	ruleColElmType
	{ after(grammarAccess.getColumnTypeAccess().getColElmTypeParserRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnTypeAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getColumnTypeAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnyType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnyType__Group__0__Impl
	rule__AnyType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnyTypeAccess().getColonKeyword_0()); }
	':'
	{ after(grammarAccess.getAnyTypeAccess().getColonKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnyType__Group__1__Impl
	rule__AnyType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnyTypeAccess().getTypeAssignment_1()); }
	(rule__AnyType__TypeAssignment_1)
	{ after(grammarAccess.getAnyTypeAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnyType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnyTypeAccess().getGroup_2()); }
	(rule__AnyType__Group_2__0)?
	{ after(grammarAccess.getAnyTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AnyType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnyType__Group_2__0__Impl
	rule__AnyType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnyTypeAccess().get_Keyword_2_0()); }
	'_'
	{ after(grammarAccess.getAnyTypeAccess().get_Keyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AnyType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnyTypeAccess().getDigitAssignment_2_1()); }
	(rule__AnyType__DigitAssignment_2_1)
	{ after(grammarAccess.getAnyTypeAccess().getDigitAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stmt__Group__0__Impl
	rule__Stmt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtAccess().getFlowAssignment_0()); }
	(rule__Stmt__FlowAssignment_0)?
	{ after(grammarAccess.getStmtAccess().getFlowAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stmt__Group__1__Impl
	rule__Stmt__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtAccess().getList_of_variablesAssignment_1()); }
	(rule__Stmt__List_of_variablesAssignment_1)
	{ after(grammarAccess.getStmtAccess().getList_of_variablesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stmt__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtAccess().getGroup_2()); }
	(rule__Stmt__Group_2__0)?
	{ after(grammarAccess.getStmtAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Stmt__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stmt__Group_2__0__Impl
	rule__Stmt__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtAccess().getColonEqualsSignKeyword_2_0()); }
	':='
	{ after(grammarAccess.getStmtAccess().getColonEqualsSignKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Stmt__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStmtAccess().getExpAssignment_2_1()); }
	(rule__Stmt__ExpAssignment_2_1)
	{ after(grammarAccess.getStmtAccess().getExpAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Varlist__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Varlist__Group_1__0__Impl
	rule__Varlist__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Varlist__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarlistAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getVarlistAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varlist__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Varlist__Group_1__1__Impl
	rule__Varlist__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Varlist__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarlistAccess().getVariablesAssignment_1_1()); }
	(rule__Varlist__VariablesAssignment_1_1)
	{ after(grammarAccess.getVarlistAccess().getVariablesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varlist__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Varlist__Group_1__2__Impl
	rule__Varlist__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Varlist__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarlistAccess().getGroup_1_2()); }
	(rule__Varlist__Group_1_2__0)*
	{ after(grammarAccess.getVarlistAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varlist__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Varlist__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Varlist__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarlistAccess().getRightParenthesisKeyword_1_3()); }
	')'
	{ after(grammarAccess.getVarlistAccess().getRightParenthesisKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Varlist__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Varlist__Group_1_2__0__Impl
	rule__Varlist__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Varlist__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarlistAccess().getCommaKeyword_1_2_0()); }
	','
	{ after(grammarAccess.getVarlistAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varlist__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Varlist__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Varlist__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVarlistAccess().getVariablesAssignment_1_2_1()); }
	(rule__Varlist__VariablesAssignment_1_2_1)
	{ after(grammarAccess.getVarlistAccess().getVariablesAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expr__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expr__Group_1__0__Impl
	rule__Expr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAccess().getGroup_1_0()); }
	(rule__Expr__Group_1_0__0)?
	{ after(grammarAccess.getExprAccess().getGroup_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expr__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAccess().getRight_factorAssignment_1_1()); }
	(rule__Expr__Right_factorAssignment_1_1)
	{ after(grammarAccess.getExprAccess().getRight_factorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expr__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expr__Group_1_0__0__Impl
	rule__Expr__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAccess().getLeft_factorAssignment_1_0_0()); }
	(rule__Expr__Left_factorAssignment_1_0_0)
	{ after(grammarAccess.getExprAccess().getLeft_factorAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expr__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExprAccess().getOperatorAssignment_1_0_1()); }
	(rule__Expr__OperatorAssignment_1_0_1)
	{ after(grammarAccess.getExprAccess().getOperatorAssignment_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_0__0__Impl
	rule__Factor__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getFactorAction_0_0()); }
	()
	{ after(grammarAccess.getFactorAccess().getFactorAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getLiteral_constantParserRuleCall_0_1()); }
	ruleLiteral_constant
	{ after(grammarAccess.getFactorAccess().getLiteral_constantParserRuleCall_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__0__Impl
	rule__Factor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getFactorAction_1_0()); }
	()
	{ after(grammarAccess.getFactorAccess().getFactorAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getNILKeyword_1_1()); }
	'NIL'
	{ after(grammarAccess.getFactorAccess().getNILKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Fcncall__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fcncall__Group__0__Impl
	rule__Fcncall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fcncall__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFcncallAccess().getModuleAssignment_0()); }
	(rule__Fcncall__ModuleAssignment_0)
	{ after(grammarAccess.getFcncallAccess().getModuleAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fcncall__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fcncall__Group__1__Impl
	rule__Fcncall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Fcncall__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFcncallAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getFcncallAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fcncall__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fcncall__Group__2__Impl
	rule__Fcncall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Fcncall__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFcncallAccess().getFunction_nameAssignment_2()); }
	(rule__Fcncall__Function_nameAssignment_2)
	{ after(grammarAccess.getFcncallAccess().getFunction_nameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fcncall__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fcncall__Group__3__Impl
	rule__Fcncall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Fcncall__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFcncallAccess().getLeftParenthesisKeyword_3()); }
	'('
	{ after(grammarAccess.getFcncallAccess().getLeftParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fcncall__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fcncall__Group__4__Impl
	rule__Fcncall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Fcncall__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFcncallAccess().getArgsAssignment_4()); }
	(rule__Fcncall__ArgsAssignment_4)?
	{ after(grammarAccess.getFcncallAccess().getArgsAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fcncall__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Fcncall__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fcncall__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFcncallAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getFcncallAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Args__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Args__Group__0__Impl
	rule__Args__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Args__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgsAccess().getFactorParserRuleCall_0()); }
	ruleFactor
	{ after(grammarAccess.getArgsAccess().getFactorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Args__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Args__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Args__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgsAccess().getGroup_1()); }
	(rule__Args__Group_1__0)*
	{ after(grammarAccess.getArgsAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Args__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Args__Group_1__0__Impl
	rule__Args__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Args__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgsAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getArgsAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Args__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Args__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Args__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArgsAccess().getFactor1Assignment_1_1()); }
	(rule__Args__Factor1Assignment_1_1)
	{ after(grammarAccess.getArgsAccess().getFactor1Assignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Bte__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bte__Group__0__Impl
	rule__Bte__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Bte__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBteAccess().getBITTerminalRuleCall_0()); }
	RULE_BIT
	{ after(grammarAccess.getBteAccess().getBITTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bte__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bte__Group__1__Impl
	rule__Bte__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Bte__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBteAccess().getBITTerminalRuleCall_1()); }
	RULE_BIT
	{ after(grammarAccess.getBteAccess().getBITTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bte__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bte__Group__2__Impl
	rule__Bte__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Bte__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBteAccess().getBITTerminalRuleCall_2()); }
	RULE_BIT
	{ after(grammarAccess.getBteAccess().getBITTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bte__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bte__Group__3__Impl
	rule__Bte__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Bte__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBteAccess().getBITTerminalRuleCall_3()); }
	RULE_BIT
	{ after(grammarAccess.getBteAccess().getBITTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bte__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bte__Group__4__Impl
	rule__Bte__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Bte__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBteAccess().getBITTerminalRuleCall_4()); }
	RULE_BIT
	{ after(grammarAccess.getBteAccess().getBITTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bte__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bte__Group__5__Impl
	rule__Bte__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Bte__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBteAccess().getBITTerminalRuleCall_5()); }
	RULE_BIT
	{ after(grammarAccess.getBteAccess().getBITTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bte__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bte__Group__6__Impl
	rule__Bte__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Bte__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBteAccess().getBITTerminalRuleCall_6()); }
	RULE_BIT
	{ after(grammarAccess.getBteAccess().getBITTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Bte__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Bte__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Bte__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBteAccess().getBITTerminalRuleCall_7()); }
	RULE_BIT
	{ after(grammarAccess.getBteAccess().getBITTerminalRuleCall_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FLT__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLT__Group__0__Impl
	rule__FLT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FLT__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLTAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getFLTAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLT__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLT__Group__1__Impl
	rule__FLT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FLT__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLTAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getFLTAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FLT__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FLT__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FLT__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFLTAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getFLTAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__ElementsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getElementsStatementParserRuleCall_0_0()); }
		ruleStatement
		{ after(grammarAccess.getProgramAccess().getElementsStatementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__HelpAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getHelpHelpinfoParserRuleCall_0_1_0()); }
		ruleHelpinfo
		{ after(grammarAccess.getStatementAccess().getHelpHelpinfoParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__HelpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getHelpHelpinfoParserRuleCall_1_1_0()); }
		ruleHelpinfo
		{ after(grammarAccess.getStatementAccess().getHelpHelpinfoParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleStmt__IdentAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleStmtAccess().getIdentWRDTerminalRuleCall_0_1_0()); }
		RULE_WRD
		{ after(grammarAccess.getModuleStmtAccess().getIdentWRDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleStmt__IdentAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleStmtAccess().getIdentWRDTerminalRuleCall_1_1_0()); }
		RULE_WRD
		{ after(grammarAccess.getModuleStmtAccess().getIdentWRDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleStmt__Second_identAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleStmtAccess().getSecond_identWRDTerminalRuleCall_1_2_1_0()); }
		RULE_WRD
		{ after(grammarAccess.getModuleStmtAccess().getSecond_identWRDTerminalRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStmt__IdentifierAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncludeStmtAccess().getIdentifierWRDTerminalRuleCall_0_1_0()); }
		RULE_WRD
		{ after(grammarAccess.getIncludeStmtAccess().getIdentifierWRDTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IncludeStmt__String_literalAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIncludeStmtAccess().getString_literalSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getIncludeStmtAccess().getString_literalSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__HeaderAssignment_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getHeaderHeaderParserRuleCall_0_2_0()); }
		ruleHeader
		{ after(grammarAccess.getDefinitionAccess().getHeaderHeaderParserRuleCall_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__IdentifierAssignment_0_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getIdentifierWRDTerminalRuleCall_0_4_0()); }
		RULE_WRD
		{ after(grammarAccess.getDefinitionAccess().getIdentifierWRDTerminalRuleCall_0_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__HeaderAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getHeaderHeaderParserRuleCall_1_2_0()); }
		ruleHeader
		{ after(grammarAccess.getDefinitionAccess().getHeaderHeaderParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__IdentifierAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getIdentifierWRDTerminalRuleCall_1_4_0()); }
		RULE_WRD
		{ after(grammarAccess.getDefinitionAccess().getIdentifierWRDTerminalRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__HeaderAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getHeaderHeaderParserRuleCall_2_2_0()); }
		ruleHeader
		{ after(grammarAccess.getDefinitionAccess().getHeaderHeaderParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__StatementsAssignment_2_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getStatementsStatementParserRuleCall_2_3_0()); }
		ruleStatement
		{ after(grammarAccess.getDefinitionAccess().getStatementsStatementParserRuleCall_2_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Function_nameAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getFunction_nameNameParserRuleCall_2_5_0()); }
		ruleName
		{ after(grammarAccess.getDefinitionAccess().getFunction_nameNameParserRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__HeaderAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getHeaderHeaderParserRuleCall_3_1_0()); }
		ruleHeader
		{ after(grammarAccess.getDefinitionAccess().getHeaderHeaderParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__StatementsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getStatementsStatementParserRuleCall_3_2_0()); }
		ruleStatement
		{ after(grammarAccess.getDefinitionAccess().getStatementsStatementParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Factory_nameAssignment_3_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getFactory_nameNameParserRuleCall_3_4_0()); }
		ruleName
		{ after(grammarAccess.getDefinitionAccess().getFactory_nameNameParserRuleCall_3_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Helpinfo__String_literalAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHelpinfoAccess().getString_literalSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getHelpinfoAccess().getString_literalSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Header_nameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeaderAccess().getHeader_nameNameParserRuleCall_0_0()); }
		ruleName
		{ after(grammarAccess.getHeaderAccess().getHeader_nameNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__ParamsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeaderAccess().getParamsParamsParserRuleCall_2_0()); }
		ruleParams
		{ after(grammarAccess.getHeaderAccess().getParamsParamsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Header__Return_typeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getHeaderAccess().getReturn_typeResultParserRuleCall_4_0()); }
		ruleResult
		{ after(grammarAccess.getHeaderAccess().getReturn_typeResultParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Name__IdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNameAccess().getIdWRDTerminalRuleCall_1_0()); }
		RULE_WRD
		{ after(grammarAccess.getNameAccess().getIdWRDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__BindAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamsAccess().getBindBindingParserRuleCall_0_0()); }
		ruleBinding
		{ after(grammarAccess.getParamsAccess().getBindBindingParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Params__BindAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamsAccess().getBindBindingParserRuleCall_1_1_0()); }
		ruleBinding
		{ after(grammarAccess.getParamsAccess().getBindBindingParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__IdentifierAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingAccess().getIdentifierWRDTerminalRuleCall_0_0()); }
		RULE_WRD
		{ after(grammarAccess.getBindingAccess().getIdentifierWRDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Binding__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBindingAccess().getTypeTypeNameParserRuleCall_1_0()); }
		ruleTypeName
		{ after(grammarAccess.getBindingAccess().getTypeTypeNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarType__IdentifierAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScalarTypeAccess().getIdentifierWRDTerminalRuleCall_1_0()); }
		RULE_WRD
		{ after(grammarAccess.getScalarTypeAccess().getIdentifierWRDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyType__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnyTypeAccess().getTypeAnyKeyword_1_0()); }
		(
			{ before(grammarAccess.getAnyTypeAccess().getTypeAnyKeyword_1_0()); }
			'any'
			{ after(grammarAccess.getAnyTypeAccess().getTypeAnyKeyword_1_0()); }
		)
		{ after(grammarAccess.getAnyTypeAccess().getTypeAnyKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyType__DigitAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnyTypeAccess().getDigitOIDTerminalRuleCall_2_1_0()); }
		RULE_OID
		{ after(grammarAccess.getAnyTypeAccess().getDigitOIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__FlowAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStmtAccess().getFlowFlowParserRuleCall_0_0()); }
		ruleFlow
		{ after(grammarAccess.getStmtAccess().getFlowFlowParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__List_of_variablesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStmtAccess().getList_of_variablesVarlistParserRuleCall_1_0()); }
		ruleVarlist
		{ after(grammarAccess.getStmtAccess().getList_of_variablesVarlistParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Stmt__ExpAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStmtAccess().getExpExprParserRuleCall_2_1_0()); }
		ruleExpr
		{ after(grammarAccess.getStmtAccess().getExpExprParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varlist__VariablesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarlistAccess().getVariablesVariableParserRuleCall_0_0()); }
		ruleVariable
		{ after(grammarAccess.getVarlistAccess().getVariablesVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varlist__VariablesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarlistAccess().getVariablesVariableParserRuleCall_1_1_0()); }
		ruleVariable
		{ after(grammarAccess.getVarlistAccess().getVariablesVariableParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Varlist__VariablesAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarlistAccess().getVariablesVariableParserRuleCall_1_2_1_0()); }
		ruleVariable
		{ after(grammarAccess.getVarlistAccess().getVariablesVariableParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__IdentifierAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getIdentifierWRDTerminalRuleCall_0()); }
		RULE_WRD
		{ after(grammarAccess.getVariableAccess().getIdentifierWRDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Left_factorAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getLeft_factorFactorParserRuleCall_1_0_0_0()); }
		ruleFactor
		{ after(grammarAccess.getExprAccess().getLeft_factorFactorParserRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__OperatorAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getOperatorOperatorParserRuleCall_1_0_1_0()); }
		ruleOperator
		{ after(grammarAccess.getExprAccess().getOperatorOperatorParserRuleCall_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expr__Right_factorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExprAccess().getRight_factorFactorParserRuleCall_1_1_0()); }
		ruleFactor
		{ after(grammarAccess.getExprAccess().getRight_factorFactorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fcncall__ModuleAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFcncallAccess().getModuleModuleNameParserRuleCall_0_0()); }
		ruleModuleName
		{ after(grammarAccess.getFcncallAccess().getModuleModuleNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fcncall__Function_nameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFcncallAccess().getFunction_nameNameParserRuleCall_2_0()); }
		ruleName
		{ after(grammarAccess.getFcncallAccess().getFunction_nameNameParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Fcncall__ArgsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFcncallAccess().getArgsArgsParserRuleCall_4_0()); }
		ruleArgs
		{ after(grammarAccess.getFcncallAccess().getArgsArgsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Args__Factor1Assignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArgsAccess().getFactor1FactorParserRuleCall_1_1_0()); }
		ruleFactor
		{ after(grammarAccess.getArgsAccess().getFactor1FactorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleName__IdentifierAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleNameAccess().getIdentifierWRDTerminalRuleCall_0()); }
		RULE_WRD
		{ after(grammarAccess.getModuleNameAccess().getIdentifierWRDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_BIT : ('0'|'1');

RULE_CHR : ('a'..'z'|'A'..'Z'|'_'|'0'..'9');

RULE_WRD : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_OID : '1'..'9' ('0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
